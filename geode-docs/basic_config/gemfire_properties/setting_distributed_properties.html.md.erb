---
title:  设置属性
---

<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

Geode为开箱即用（out-of-the-box）的系统提供了默认的分布式系统配置。 要使用非默认配置并优化您的成员通信，可以使用各种选项的组合来自定义分布式系统配置。

<a id="setting_distributed_properties__section_67EBCC53EB174B108DA7271E2CD2B76C"></a>
Geode属性用于加入分布式系统和配置系统成员行为。 可以通过`gemfire.properties`文件，Java API或命令行输入配置您的Geode属性。 通常，您将所有属性存储在`gemfire.properties`文件中，但是您可能需要通过其他方式提供属性，例如，传入从键盘输入中收到的用户名和密码的安全属性。

**注意:**
在通过API更改属性（包括`gemfire.properties`和`gfsecurity.properties`设置）之前，请咨询您的Geode系统管理员。 系统管理员可能需要在命令行或配置文件中设置属性。 通过API进行的任何更改都会覆盖其他设置。

**注意:**
产品目录中的`defaultConfigs`有一个`gemfire.properties`样例文件，其中包含所有默认设置。

通过以下任意组合来设置分布式系统属性。 系统按列出的顺序查找设置：

1.  `java.lang.System` 属性设置。 通常在命令行设置。 对于应用程序，请在您的代码或命令行中进行设置。

    命名：以`gemfire.property-name`格式指定的这些属性，其中`property-name`与`gemfire.properties`文件中的名称匹配。 要设置gemfire属性文件名，请使用`gemfirePropertyFile`
        
    -   在API中，在创建缓存之前设置`System`属性。 例如：
   
        ``` pre
        System.setProperty("gemfirePropertyFile", "gfTest");
        System.setProperty("gemfire.mcast-port", "10999");

        Cache cache = new CacheFactory().create();
        ```
    -   在`java`命令行中，使用`-D`开关传入`System`属性。 例：

        ``` pre
        java -DgemfirePropertyFile=gfTest -Dgemfire.mcast-port=10999 test.Program
        ```
2.  从`Properties` 对象中输入

    命名：使用`gemfire.properties`文件中的名称来指定这些属性。 要设置gemfire属性文件名，请使用`gemfirePropertyFile`。
    -   在API中，创建一个“属性”对象并将其传递给缓存创建方法。 例如：

        ``` pre
        Properties properties= new Properties();
        properties.setProperty("log-level", "warning");
        properties.setProperty("name", "testMember2");
        ClientCache userCache = 
            new ClientCacheFactory(properties).create();
        ```
    -   对于缓存服务器，请将`gfsh`命令行上的属性文件作为命令行选项传递。 例如：

        ``` pre
        gfsh>start server --name=server_name --mcast-port=10338 --properties-file=serverConfig/gemfire.properties --security-properties-file=gfsecurity.properties
        ```

        关于运行缓存服务器的更多信息， 请参阅 [运行Geode Server进程](../../configuring/running/running_the_cacheserver.html)
        
3.  在`gemfire.properties`文件中输入。 请参阅 [不通过集群配置服务部署配置文件](../../configuring/running/deploying_config_files.html). 例如:

    ``` pre
    cache-xml-file=cache.xml
    conserve-sockets=true
    disable-tcp=false
    ```

4.  默认值。 默认值是在`org.apache.geode.distributed.ConfigurationProperties`的API中为其定义的
.


